<testsuites name="jest tests" tests="32" failures="0" time="7.283">
  <testsuite name="Provider: ConsoleLogProvider" errors="0" failures="0" skipped="0" timestamp="2019-03-20T02:55:38" time="1.909" tests="8">
    <testcase classname="Provider: ConsoleLogProvider can log debug" name="Provider: ConsoleLogProvider can log debug" time="0.006">
    </testcase>
    <testcase classname="Provider: ConsoleLogProvider can log debug with json" name="Provider: ConsoleLogProvider can log debug with json" time="0.001">
    </testcase>
    <testcase classname="Provider: ConsoleLogProvider can log info" name="Provider: ConsoleLogProvider can log info" time="0.001">
    </testcase>
    <testcase classname="Provider: ConsoleLogProvider can log info with JSON" name="Provider: ConsoleLogProvider can log info with JSON" time="0.001">
    </testcase>
    <testcase classname="Provider: ConsoleLogProvider can log warn" name="Provider: ConsoleLogProvider can log warn" time="0.001">
    </testcase>
    <testcase classname="Provider: ConsoleLogProvider can log warn with json" name="Provider: ConsoleLogProvider can log warn with json" time="0">
    </testcase>
    <testcase classname="Provider: ConsoleLogProvider can log error" name="Provider: ConsoleLogProvider can log error" time="0.001">
    </testcase>
    <testcase classname="Provider: ConsoleLogProvider can log error with JSON" name="Provider: ConsoleLogProvider can log error with JSON" time="0">
    </testcase>
  </testsuite>
  <testsuite name="DependencyResolver: IoCTestsWebPartPropsDependencyResolver" errors="0" failures="0" skipped="0" timestamp="2019-03-20T02:55:38" time="1.999" tests="3">
    <testcase classname="DependencyResolver: IoCTestsWebPartPropsDependencyResolver should have valid props with mocked services" name="DependencyResolver: IoCTestsWebPartPropsDependencyResolver should have valid props with mocked services" time="0.005">
    </testcase>
    <testcase classname="DependencyResolver: IoCTestsWebPartPropsDependencyResolver should have valid props with real services" name="DependencyResolver: IoCTestsWebPartPropsDependencyResolver should have valid props with real services" time="0.001">
    </testcase>
    <testcase classname="DependencyResolver: IoCTestsWebPartPropsDependencyResolver should support empty property" name="DependencyResolver: IoCTestsWebPartPropsDependencyResolver should support empty property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Service: PnPListsService" errors="0" failures="0" skipped="0" timestamp="2019-03-20T02:55:38" time="2.016" tests="3">
    <testcase classname="Service: PnPListsService should get 1 list [Using explict class to mock]" name="Service: PnPListsService should get 1 list [Using explict class to mock]" time="0.005">
    </testcase>
    <testcase classname="Service: PnPListsService should get 1 list [Using Jest to mock]" name="Service: PnPListsService should get 1 list [Using Jest to mock]" time="0.001">
    </testcase>
    <testcase classname="Service: PnPListsService should get 2 lists" name="Service: PnPListsService should get 2 lists" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Component: ListOfLists" errors="0" failures="0" skipped="0" timestamp="2019-03-20T02:55:38" time="2.76" tests="7">
    <testcase classname="Component: ListOfLists should render in loading state" name="Component: ListOfLists should render in loading state" time="0.011">
    </testcase>
    <testcase classname="Component: ListOfLists should render 1 item with no cache" name="Component: ListOfLists should render 1 item with no cache" time="0.003">
    </testcase>
    <testcase classname="Component: ListOfLists should render 2 items with no cache" name="Component: ListOfLists should render 2 items with no cache" time="0.001">
    </testcase>
    <testcase classname="Component: ListOfLists should render 1 item with primed cache" name="Component: ListOfLists should render 1 item with primed cache" time="0.001">
    </testcase>
    <testcase classname="Component: ListOfLists should render 1 item with primed cache" name="Component: ListOfLists should render 1 item with primed cache" time="0.001">
    </testcase>
    <testcase classname="Component: ListOfLists should render description" name="Component: ListOfLists should render description" time="0.001">
    </testcase>
    <testcase classname="Component: ListOfLists should not render empty description" name="Component: ListOfLists should not render empty description" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Provider: StorageCacheProvider" errors="0" failures="0" skipped="0" timestamp="2019-03-20T02:55:38" time="3.019" tests="11">
    <testcase classname="Provider: StorageCacheProvider can set and get from storage with default timeout" name="Provider: StorageCacheProvider can set and get from storage with default timeout" time="0.009">
    </testcase>
    <testcase classname="Provider: StorageCacheProvider can set and get from storage with short timeout" name="Provider: StorageCacheProvider can set and get from storage with short timeout" time="0.001">
    </testcase>
    <testcase classname="Provider: StorageCacheProvider can set and get from storage with long timeout" name="Provider: StorageCacheProvider can set and get from storage with long timeout" time="0.001">
    </testcase>
    <testcase classname="Provider: StorageCacheProvider can set and get from storage with very long timeout" name="Provider: StorageCacheProvider can set and get from storage with very long timeout" time="0">
    </testcase>
    <testcase classname="Provider: StorageCacheProvider can set and get from storage with unspecified timeout" name="Provider: StorageCacheProvider can set and get from storage with unspecified timeout" time="0.001">
    </testcase>
    <testcase classname="Provider: StorageCacheProvider can set and clear from storage" name="Provider: StorageCacheProvider can set and clear from storage" time="0.001">
    </testcase>
    <testcase classname="Provider: StorageCacheProvider can set and get object from storage" name="Provider: StorageCacheProvider can set and get object from storage" time="0.001">
    </testcase>
    <testcase classname="Provider: StorageCacheProvider can set and get null from storage" name="Provider: StorageCacheProvider can set and get null from storage" time="0">
    </testcase>
    <testcase classname="Provider: StorageCacheProvider can support browsers that do not support storage" name="Provider: StorageCacheProvider can support browsers that do not support storage" time="0">
    </testcase>
    <testcase classname="Provider: StorageCacheProvider can set and get from storage using already prefixed key" name="Provider: StorageCacheProvider can set and get from storage using already prefixed key" time="0.001">
    </testcase>
    <testcase classname="Provider: StorageCacheProvider can expire entries" name="Provider: StorageCacheProvider can expire entries" time="1.003">
    </testcase>
  </testsuite>
</testsuites>